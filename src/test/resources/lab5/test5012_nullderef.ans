# Type checking ...
## number
# Stepping ...
##    0:
##  Map()
##  Decl(MVar,b,Unary(Cast(TObj(Map(n -> TNumber))),Null),Decl(MConst,f,Function(None,Left(List((x,TObj(Map(n -> TNumber))))),Some(TNumber),Binary(Plus,GetField(Var(x),n),N(1.0))),Call(Var(f),List(Var(b)))))
##    1:
##  Map()
##  Decl(MVar,b,Null,Decl(MConst,f,Function(None,Left(List((x,TObj(Map(n -> TNumber))))),Some(TNumber),Binary(Plus,GetField(Var(x),n),N(1.0))),Call(Var(f),List(Var(b)))))
##    2:
##  Map(A(1) -> Null)
##  Decl(MConst,f,Function(None,Left(List((x,TObj(Map(n -> TNumber))))),Some(TNumber),Binary(Plus,GetField(Var(x),n),N(1.0))),Call(Var(f),List(Unary(Deref,A(1)))))
##    3:
##  Map(A(1) -> Null)
##  Call(Function(None,Left(List((x,TObj(Map(n -> TNumber))))),Some(TNumber),Binary(Plus,GetField(Var(x),n),N(1.0))),List(Unary(Deref,A(1))))
##    4:
##  Map(A(1) -> Null)
##  Call(Function(None,Left(List((x,TObj(Map(n -> TNumber))))),Some(TNumber),Binary(Plus,GetField(Var(x),n),N(1.0))),List(Null))
##    5:
##  Map(A(1) -> Null)
##  Binary(Plus,GetField(Null,n),N(1.0))
NullDereferenceError
test5012_nullderef.jsy: in evaluating GetField(Null,n)

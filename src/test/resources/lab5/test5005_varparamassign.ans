# Type checking ...
## Undefined
# Stepping ...
##    0:
##  Map()
##  Decl(MConst,f,Function(None,Right((PVar,x,TNumber)),Some(TNumber),Binary(Seq,Assign(Var(x),Binary(Plus,Var(x),N(1.0))),Binary(Plus,Var(x),N(1.0)))),Decl(MConst,y,N(5.0),Binary(Seq,Print(Var(y)),Decl(MConst,z,Call(Var(f),List(Var(y))),Binary(Seq,Print(Var(y)),Print(Var(z)))))))
##    1:
##  Map()
##  Decl(MConst,y,N(5.0),Binary(Seq,Print(Var(y)),Decl(MConst,z,Call(Function(None,Right((PVar,x,TNumber)),Some(TNumber),Binary(Seq,Assign(Var(x),Binary(Plus,Var(x),N(1.0))),Binary(Plus,Var(x),N(1.0)))),List(Var(y))),Binary(Seq,Print(Var(y)),Print(Var(z))))))
##    2:
##  Map()
##  Binary(Seq,Print(N(5.0)),Decl(MConst,z,Call(Function(None,Right((PVar,x,TNumber)),Some(TNumber),Binary(Seq,Assign(Var(x),Binary(Plus,Var(x),N(1.0))),Binary(Plus,Var(x),N(1.0)))),List(N(5.0))),Binary(Seq,Print(N(5.0)),Print(Var(z)))))
5.0
##    3:
##  Map()
##  Binary(Seq,Undefined,Decl(MConst,z,Call(Function(None,Right((PVar,x,TNumber)),Some(TNumber),Binary(Seq,Assign(Var(x),Binary(Plus,Var(x),N(1.0))),Binary(Plus,Var(x),N(1.0)))),List(N(5.0))),Binary(Seq,Print(N(5.0)),Print(Var(z)))))
##    4:
##  Map()
##  Decl(MConst,z,Call(Function(None,Right((PVar,x,TNumber)),Some(TNumber),Binary(Seq,Assign(Var(x),Binary(Plus,Var(x),N(1.0))),Binary(Plus,Var(x),N(1.0)))),List(N(5.0))),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##    5:
##  Map(A(1) -> N(5.0))
##  Decl(MConst,z,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##    6:
##  Map(A(1) -> N(5.0))
##  Decl(MConst,z,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(5.0),N(1.0))),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##    7:
##  Map(A(1) -> N(5.0))
##  Decl(MConst,z,Binary(Seq,Assign(Unary(Deref,A(1)),N(6.0)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##    8:
##  Map(A(1) -> N(6.0))
##  Decl(MConst,z,Binary(Seq,N(6.0),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##    9:
##  Map(A(1) -> N(6.0))
##  Decl(MConst,z,Binary(Plus,Unary(Deref,A(1)),N(1.0)),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##   10:
##  Map(A(1) -> N(6.0))
##  Decl(MConst,z,Binary(Plus,N(6.0),N(1.0)),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##   11:
##  Map(A(1) -> N(6.0))
##  Decl(MConst,z,N(7.0),Binary(Seq,Print(N(5.0)),Print(Var(z))))
##   12:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Print(N(5.0)),Print(N(7.0)))
5.0
##   13:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Undefined,Print(N(7.0)))
##   14:
##  Map(A(1) -> N(6.0))
##  Print(N(7.0))
7.0
## Map(A(1) -> N(6.0))
undefined
